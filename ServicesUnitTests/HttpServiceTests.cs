using Microsoft.VisualStudio.TestTools.UnitTesting;
using Services;

[TestClass]
public class HttpServiceTests
{
    private string dummyUrlThatReturnsAnArrayAsJson = "http://dummy.restapiexample.com/api/v1/employees";

    [TestMethod]
    public void ShouldGetValidResponseOnValidUrl()
    {
        var sut = new HttpService();

        var result = sut.GetAsync(dummyUrlThatReturnsAnArrayAsJson).Result;

        Assert.IsTrue(result.isSuccess);
        Assert.IsTrue(false == string.IsNullOrEmpty(result.value));
    }

    [TestMethod]
    public void ShouldReturnInvalidResponseOnEmptyUrl()
    {
        var sut = new HttpService();

        var result = sut.GetAsync(string.Empty).Result;

        Assert.IsTrue(false == result.isSuccess);
        Assert.IsTrue(result.value == string.Empty);
    }

    [TestMethod]
    public void ShouldReturnInvalidResponseOnNullUrl()
    {
        var sut = new HttpService();

        var result = sut.GetAsync(null).Result;

        Assert.IsTrue(false == result.isSuccess);
        Assert.IsTrue(result.value == string.Empty);
    }

    [TestMethod]
    public void ShouldReturnInvalidResponseOnInvalidUrl()
    {
        var sut = new HttpService();

        var result = sut.GetAsync(dummyUrlThatReturnsAnArrayAsJson + "foo").Result;

        Assert.IsTrue(false == result.isSuccess);
        Assert.IsTrue(result.value == string.Empty);
    }

    [TestMethod]
    public void ShouldReturnImageAsBase64OnValidUrl()
    {
        var urlOfRandomImage =
            "https://www.statisticshowto.datasciencecentral.com/wp-content/uploads/2013/12/randomSampling.jpg";

        var manualyEncodedImageAsBase64 = @"image/jpg;base64, ";

        var sut = new HttpService();

        var result = sut.GetImageAsBase64url(urlOfRandomImage).Result;

        Assert.IsTrue(manualyEncodedImageAsBase64 == result);
    }

    [TestMethod]
    public void ShouldReturnEmptyResultForEncodingImageOnInvalidUrl()
    {
        var sut = new HttpService();

        var result = sut.GetImageAsBase64url("nastyNotWorthyUrl").Result;

        Assert.IsTrue(result == string.Empty);

        result = sut.GetImageAsBase64url("").Result;

        Assert.IsTrue(result == string.Empty);
    }

    [TestMethod]
    public void ShouldReturnEmptyResultForEncodingImageOnEmptyOrNullUrl()
    {
        var sut = new HttpService();

        var result = sut.GetImageAsBase64url(null).Result;

        Assert.IsTrue(result == string.Empty);

        result = sut.GetImageAsBase64url("").Result;

        Assert.IsTrue(result == string.Empty);
    }
}

